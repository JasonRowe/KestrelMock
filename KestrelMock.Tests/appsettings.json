{
	"MockSettings": [
		{
			"Request": {
				"Methods": [ "GET" ],
				"PathStartsWith": "/starts/with"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "{\"banana_x\": 8000}"
			}
		},
		{
			"Request": {
				"Methods": [ "GET" ],
				"PathMatchesRegex": ".+\\d{4}.+"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "{\"banana_x\": 8000}"
			}
		},
		{
			"Request": {
				"Methods": [ "POST", "GET" ],
				"Path": "/hello/world"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "{\"hello\": \"world\"}"
			}
		},
		{
			"Request": {
				"Methods": [ "POST" ],
				"Path": "/api/estimate",
				"BodyContains": "00000"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "BodyContains Works!"
			}
		},
		{
			"Request": {
				"Methods": [ "POST" ],
				"Path": "/api/estimate",
				"BodyDoesNotContain": "00000"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "BodyDoesNotContain works!!"
			}
		},
		{
			"Request": {
				"Methods": [ "POST", "GET" ],
				"Path": "/api/fromfile"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"BodyFromFilePath": "./TestData/body.txt"
			}
		},
		{
			"Request": {
				"Methods": [ "POST", "GET" ],
				"Path": "/errors/502"
			},
			"Response": {
				"Status": 502,
				"Headers": [
					{
						"Content-Type": "application/text"
					}
				],
				"Body": "Bad Gateway! Bad!"
			}
		},
		{
			"Request": {
				"Methods": [ "GET" ],
				"PathStartsWith": "/api/orders"
			},
			"Response": {
				"Status": 200,
				"Headers": [
					{
						"Content-Type": "application/json"
					}
				],
				"Body": "{\"order\": \"world\", \"product\":\"world\"}",
				"ReplaceDictionary": {
					"order": "orders/([\\w\\d]+)/.+",
					"product": "/([\\w\\d]+)$"
				}
			}
		}
	]
}
